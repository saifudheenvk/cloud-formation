{
  "components": {
    "BadRequestResponse": {
      "properties": {
        "responseBody": {
          "example": "The submitted request body does not match the schema specification for this request. Please check if all mandatory fields are passed in the request body",
          "type": "string"
        },
        "statusCode": {
          "example": 400,
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ProductResponse": {
      "properties": {
        "id": {
          "description": "id",
          "example": "1234",
          "type": "string"
        },
        "productName": {
          "description": "productName",
          "example": "product1",
          "type": "string"
        }
      },
      "required": [
        "productName",
        "id"
      ],
      "title": "get product",
      "type": "object"
    },
    "UpdateResponse": {
      "type": "object"
    }
  },
  "info": {
    "contact": {
      "email": "vksaifudheen4@gmail.com",
      "name": "Saifudheen"
    },
    "description": "my test app apis",
    "title": "My test app apis",
    "version": "2.0.0"
  },
  "openapi": "3.0.0",
  "paths": {
    "/products": {
      "patch": {
        "operationId": "patchProducts",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductResponse"
              }
            }
          },
          "description": "add new product",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "description": "User Identity Updated"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            },
            "description": "400 response"
          }
        },
        "x-am`azon-apigateway-integration": {
          "httpMethod": "POST",
          "passthroughBehavior": "when_no_match",
          "timeoutInMillis": 3000,
          "type": "aws_proxy",
          "uri": "arn:aws:apigateway:SWREGION:lambda:path/2015-03-31/functions/arn:aws:lambda:SWREGION:829121778091:function:update-products-saifu/invocations"
        },
        "x-amazon-apigateway-request-validator": "all"
      }
    },
    "/products/{id}": {
      "delete": {
        "operationId": "deleteProducts",
        "responses": {
          "204": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResponse"
                }
              }
            },
            "description": "User Identity Updated"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            },
            "description": "400 response"
          }
        },
        "x-amazon-apigateway-integration": {
          "httpMethod": "POST",
          "parameters": [
            {
              "$ref": "#/components/parameters/id"
            }
          ],
          "passthroughBehavior": "when_no_match",
          "timeoutInMillis": 3000,
          "type": "aws_proxy",
          "uri": "arn:aws:apigateway:SWREGION:lambda:path/2015-03-31/functions/arn:aws:lambda:SWREGION:829121778091:function:update-products-saifu/invocations"
        },
        "x-amazon-apigateway-request-validator": "all"
      }
    }
  },
  "servers": [
    {
      "url": "https://saifu-test.api.com/saifu"
    }
  ],
  "x-amazon-apigateway-request-validators": {
    "all": {
      "validateRequestBody": true,
      "validateRequestParameters": true
    },
    "body": {
      "validateRequestBody": true,
      "validateRequestParameters": false
    },
    "params": {
      "validateRequestBody": true,
      "validateRequestParameters": true
    }
  }
}
