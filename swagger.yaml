openapi: 3.0.0
info:
  title: My test app apis
  description: my test app apis
  version: "2.0.0"
  contact:
    name: Saifudheen
    email: vksaifudheen4@gmail.com
servers:
  - url: 'https://APIDOMAIN/SWENV'

x-amazon-apigateway-request-validators:
  all:
    validateRequestBody: true
    validateRequestParameters: true
  params:
    validateRequestBody: true
    validateRequestParameters: true
  body:
    validateRequestBody: true
    validateRequestParameters: false

paths:
  '/products':
    get:
      operationId: getProducts
      x-amazon-apigateway-request-validator: all
      x-amazon-apigateway-integration:
        uri: >-
          arn:aws:apigateway:SWREGION:lambda:path/2015-03-31/functions/arn:aws:lambda:SWREGION:829121778091:function:update-products-SWENV/invocations
        passthroughBehavior: when_no_match
        httpMethod: POST
        timeoutInMillis: 3000
      responses:
        '204':
          description: User Identity Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponse'
        headers:
          Access-Control-Allow-Origin:
            schema:
              type: string
        '403':
          description: 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
  '/products':
    post:
      operationId: getProducts
      x-amazon-apigateway-request-validator: all
      x-amazon-apigateway-integration:
        uri: >-
          arn:aws:apigateway:SWREGION:lambda:path/2015-03-31/functions/arn:aws:lambda:SWREGION:829121778091:function:update-products-SWENV/invocations
        passthroughBehavior: when_no_match
        httpMethod: POST
        timeoutInMillis: 3000
      requestBody:
        description: add new product
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductResponse'
      responses:
        '201':
          description: User Identity Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponse'
        headers:
          Access-Control-Allow-Origin:
            schema:
              type: string
        '403':
          description: 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
  '/products':
    patch:
      operationId: getProducts
      x-amazon-apigateway-request-validator: all
      x-am`azon-apigateway-integration:
        uri: >-
          arn:aws:apigateway:SWREGION:lambda:path/2015-03-31/functions/arn:aws:lambda:SWREGION:829121778091:function:update-products-SWENV/invocations
        passthroughBehavior: when_no_match
        httpMethod: POST
        timeoutInMillis: 3000
      requestBody:
        description: add new product
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductResponse'
      responses:
        '201':
          description: User Identity Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponse'
        headers:
          Access-Control-Allow-Origin:
            schema:
              type: string
        '403':
          description: 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
  '/products/{id}':
    delete:
      operationId: getProducts
      x-amazon-apigateway-request-validator: all
      x-amazon-apigateway-integration:
        uri: >-
          arn:aws:apigateway:SWREGION:lambda:path/2015-03-31/functions/arn:aws:lambda:SWREGION:829121778091:function:update-products-SWENV/invocations
        passthroughBehavior: when_no_match
        httpMethod: POST
        timeoutInMillis: 3000
        parameters:
          - $ref: '#/components/parameters/id'
      responses:
        '201':
          description: User Identity Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductResponse'
        headers:
          Access-Control-Allow-Origin:
            schema:
              type: string
        '403':
          description: 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string

components:
  ProductResponse:
    type: object
    title: get product
    required:
      - productName
      - id
    properties:
      productName:
        type: string
        description: productName
        example: product1
      id:
        type: string
        description: id
        example: "1234"
  
  BadRequestResponse:
    type: object
    properties:
      statusCode:
        type: integer
        example: 400
      responseBody:
        type: string
        example: >-
          The submitted request body does not match the schema specification
          for this request. Please check if all mandatory fields are passed in
          the request body